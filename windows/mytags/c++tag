!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ATOMIC_ADDRESS_LOCK_FREE	/usr/include/c++/4.4.1/stdatomic.h	79;"	d
ATOMIC_FLAG_INIT	/usr/include/c++/4.4.1/stdatomic.h	63;"	d
ATOMIC_INTEGRAL_LOCK_FREE	/usr/include/c++/4.4.1/stdatomic.h	78;"	d
_ATOMIC_CMPEXCHNG_	/usr/include/c++/4.4.1/stdatomic.h	171;"	d
_ATOMIC_LOAD_	/usr/include/c++/4.4.1/stdatomic.h	144;"	d
_ATOMIC_MODIFY_	/usr/include/c++/4.4.1/stdatomic.h	161;"	d
_ATOMIC_STORE_	/usr/include/c++/4.4.1/stdatomic.h	152;"	d
_CXX0X_WARNING_H	/usr/include/c++/4.4.1/c++0x_warning.h	28;"	d
_CXXABI_FORCED_H	/usr/include/c++/4.4.1/cxxabi-forced.h	27;"	d
_CXXABI_H	/usr/include/c++/4.4.1/cxxabi.h	43;"	d
_EXCEPTION_DEFINES_H	/usr/include/c++/4.4.1/exception_defines.h	35;"	d
_EXCEPTION_PTR_H	/usr/include/c++/4.4.1/exception_ptr.h	32;"	d
_GLIBCXX_ATOMIC_NAMESPACE	/usr/include/c++/4.4.1/stdatomic.h	/^  inline namespace _GLIBCXX_ATOMIC_NAMESPACE { }$/;"	n
_GLIBCXX_ATOMIC_NAMESPACE	/usr/include/c++/4.4.1/stdatomic.h	69;"	d
_GLIBCXX_ATOMIC_NAMESPACE	/usr/include/c++/4.4.1/stdatomic.h	72;"	d
_GLIBCXX_ATOMIC_NAMESPACE	/usr/include/c++/4.4.1/stdatomic.h	75;"	d
_GLIBCXX_ATOMIC_PROPERTY	/usr/include/c++/4.4.1/stdatomic.h	68;"	d
_GLIBCXX_ATOMIC_PROPERTY	/usr/include/c++/4.4.1/stdatomic.h	71;"	d
_GLIBCXX_ATOMIC_PROPERTY	/usr/include/c++/4.4.1/stdatomic.h	74;"	d
_GLIBCXX_BEGIN_NAMESPACE_TR1	/usr/include/c++/4.4.1/fenv.h	47;"	d
_GLIBCXX_BEGIN_NAMESPACE_TR1	/usr/include/c++/4.4.1/fenv.h	53;"	d
_GLIBCXX_COMPLEX_H	/usr/include/c++/4.4.1/complex.h	40;"	d
_GLIBCXX_END_NAMESPACE_TR1	/usr/include/c++/4.4.1/fenv.h	48;"	d
_GLIBCXX_END_NAMESPACE_TR1	/usr/include/c++/4.4.1/fenv.h	52;"	d
_GLIBCXX_FENV_H	/usr/include/c++/4.4.1/fenv.h	30;"	d
_GLIBCXX_INCLUDE_AS_CXX0X	/usr/include/c++/4.4.1/fenv.h	46;"	d
_GLIBCXX_INCLUDE_AS_CXX0X	/usr/include/c++/4.4.1/fenv.h	54;"	d
_GLIBCXX_NOTHROW	/usr/include/c++/4.4.1/cxxabi.h	52;"	d
_GLIBCXX_NOTHROW	/usr/include/c++/4.4.1/cxxabi.h	54;"	d
_GLIBCXX_STDATOMIC_H	/usr/include/c++/4.4.1/stdatomic.h	34;"	d
_GLIBCXX_TGMATH_H	/usr/include/c++/4.4.1/tgmath.h	40;"	d
_GLIBCXX_TR1	/usr/include/c++/4.4.1/fenv.h	49;"	d
_GLIBCXX_TR1	/usr/include/c++/4.4.1/fenv.h	51;"	d
_M_addref	/usr/include/c++/4.4.1/exception_ptr.h	/^      void _M_addref() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:()
_M_exception_object	/usr/include/c++/4.4.1/exception_ptr.h	/^      void* _M_exception_object;$/;"	m	class:std::__exception_ptr::exception_ptr	access:private
_M_get	/usr/include/c++/4.4.1/exception_ptr.h	/^      void *_M_get() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:() const
_M_i	/usr/include/c++/4.4.1/stdatomic.h	/^    bool _M_i;$/;"	m	struct:__atomic_flag_base	access:public
_M_release	/usr/include/c++/4.4.1/exception_ptr.h	/^      void _M_release() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:()
_M_safe_bool_dummy	/usr/include/c++/4.4.1/exception_ptr.h	/^      void _M_safe_bool_dummy();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:()
__array_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __array_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__array_type_info	access:public	signature:(const char* __n)
__array_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __array_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__atomic_flag_base	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef struct __atomic_flag_base$/;"	s
__atomic_flag_base	/usr/include/c++/4.4.1/stdatomic.h	/^  } __atomic_flag_base;$/;"	t	typeref:struct:__atomic_flag_base
__atomic_flag_base::_M_i	/usr/include/c++/4.4.1/stdatomic.h	/^    bool _M_i;$/;"	m	struct:__atomic_flag_base	access:public
__atomic_flag_for_address	/usr/include/c++/4.4.1/stdatomic.h	/^  __atomic_flag_for_address(const volatile void* __z) __attribute__((const));$/;"	p	signature:(const volatile void* __z)
__atomic_flag_wait_explicit	/usr/include/c++/4.4.1/stdatomic.h	/^  __atomic_flag_wait_explicit(volatile __atomic_flag_base*, memory_order);$/;"	p	signature:(volatile __atomic_flag_base*, memory_order)
__base_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __base_class_type_info$/;"	c	namespace:__cxxabiv1
__base_count	/usr/include/c++/4.4.1/cxxabi.h	/^    unsigned int 		__base_count;  \/\/ Number of direct bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	access:public
__base_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __base_class_type_info 	__base_info[1];  \/\/ Array of bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	access:public
__base_type	/usr/include/c++/4.4.1/cxxabi.h	/^    const __class_type_info* 	__base_type;  \/\/ Base class type.$/;"	m	class:__cxxabiv1::__base_class_type_info	access:public
__base_type	/usr/include/c++/4.4.1/cxxabi.h	/^    const __class_type_info* __base_type;$/;"	m	class:__cxxabiv1::__si_class_type_info	access:public
__catch	/usr/include/c++/4.4.1/exception_defines.h	40;"	d
__catch	/usr/include/c++/4.4.1/exception_defines.h	45;"	d
__class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __class_type_info (const char *__n) : type_info(__n) { }$/;"	f	class:__cxxabiv1::__class_type_info	access:public	signature:(const char *__n)
__class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __class_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__const_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__const_mask = 0x1,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__contained_ambig	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_ambig, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_mask = 1 << __base_class_type_info::__hwm_bit,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_private	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_private = __contained_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_public	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_public = __contained_mask | __contained_public_mask$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_public_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_public_mask = __base_class_type_info::__public_mask,   $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__contained_virtual_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_virtual_mask = __base_class_type_info::__virtual_mask, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__context	/usr/include/c++/4.4.1/cxxabi.h	/^    __class_type_info* __context;   \/\/ Class of the member.$/;"	m	class:__cxxabiv1::__pointer_to_member_type_info	access:public
__cxa_bad_cast	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_bad_cast();$/;"	p	signature:()
__cxa_bad_typeid	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_bad_typeid();$/;"	p	signature:()
__cxa_cdtor_type	/usr/include/c++/4.4.1/cxxabi.h	/^  typedef __cxa_cdtor_return_type (*__cxa_cdtor_type)(void *);$/;"	t
__cxa_demangle	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_demangle(const char* __mangled_name, char* __output_buffer,$/;"	p	signature:(const char* __mangled_name, char* __output_buffer, size_t* __length, int* __status)
__cxa_exception_type	/usr/include/c++/4.4.1/exception_ptr.h	/^      __cxa_exception_type() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:() const
__cxa_finalize	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_finalize(void*);$/;"	p	signature:(void*)
__cxa_guard_abort	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_guard_abort(__guard*);$/;"	p	signature:(__guard*)
__cxa_guard_acquire	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_guard_acquire(__guard*);$/;"	p	signature:(__guard*)
__cxa_guard_release	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_guard_release(__guard*);$/;"	p	signature:(__guard*)
__cxa_pure_virtual	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_pure_virtual(void);$/;"	p	signature:(void)
__cxa_vec_cctor	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_cctor(void* dest_array, void* src_array, size_t element_count, $/;"	p	signature:(void* dest_array, void* src_array, size_t element_count, size_t element_size, __cxa_cdtor_return_type (*constructor) (void*, void*), __cxa_cdtor_type destructor)
__cxa_vec_cleanup	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_cleanup(void* __array_address, size_t __element_count,$/;"	p	signature:(void* __array_address, size_t __element_count, size_t __element_size, __cxa_cdtor_type destructor)
__cxa_vec_ctor	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_ctor(void* __array_address, size_t __element_count,$/;"	p	signature:(void* __array_address, size_t __element_count, size_t __element_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor)
__cxa_vec_delete	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_delete(void* __array_address, size_t __element_size,$/;"	p	signature:(void* __array_address, size_t __element_size, size_t __padding_size, __cxa_cdtor_type destructor)
__cxa_vec_delete2	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_delete2(void* __array_address, size_t __element_size,$/;"	p	signature:(void* __array_address, size_t __element_size, size_t __padding_size, __cxa_cdtor_type destructor, void (*__dealloc) (void*))
__cxa_vec_delete3	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_delete3(void* __array_address, size_t __element_size,$/;"	p	signature:(void* __array_address, size_t __element_size, size_t __padding_size, __cxa_cdtor_type destructor, void (*__dealloc) (void*, size_t))
__cxa_vec_dtor	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_dtor(void* __array_address, size_t __element_count,$/;"	p	signature:(void* __array_address, size_t __element_count, size_t __element_size, __cxa_cdtor_type destructor)
__cxa_vec_new	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_new(size_t __element_count, size_t __element_size, $/;"	p	signature:(size_t __element_count, size_t __element_size, size_t __padding_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor)
__cxa_vec_new2	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_new2(size_t __element_count, size_t __element_size,$/;"	p	signature:(size_t __element_count, size_t __element_size, size_t __padding_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor, void *(*__alloc) (size_t), void (*__dealloc) (void*))
__cxa_vec_new3	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_new3(size_t __element_count, size_t __element_size,$/;"	p	signature:(size_t __element_count, size_t __element_size, size_t __padding_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor, void *(*__alloc) (size_t), void (*__dealloc) (void*, size_t))
__cxxabiv1	/usr/include/c++/4.4.1/cxxabi-forced.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1	/usr/include/c++/4.4.1/cxxabi.h	/^namespace __cxxabiv1$/;"	n
__cxxabiv1::__array_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __array_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__cxxabiv1::__array_type_info::__array_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __array_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__array_type_info	access:public	signature:(const char* __n)
__cxxabiv1::__array_type_info::~__array_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__array_type_info();$/;"	p	class:__cxxabiv1::__array_type_info	access:public	signature:()
__cxxabiv1::__base_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __base_class_type_info$/;"	c	namespace:__cxxabiv1
__cxxabiv1::__base_class_type_info::__base_type	/usr/include/c++/4.4.1/cxxabi.h	/^    const __class_type_info* 	__base_type;  \/\/ Base class type.$/;"	m	class:__cxxabiv1::__base_class_type_info	access:public
__cxxabiv1::__base_class_type_info::__hwm_bit	/usr/include/c++/4.4.1/cxxabi.h	/^	__hwm_bit = 2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__cxxabiv1::__base_class_type_info::__is_public_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_public_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info	access:public	signature:() const
__cxxabiv1::__base_class_type_info::__is_virtual_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_virtual_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info	access:public	signature:() const
__cxxabiv1::__base_class_type_info::__offset	/usr/include/c++/4.4.1/cxxabi.h	/^    __offset() const$/;"	f	class:__cxxabiv1::__base_class_type_info	access:public	signature:() const
__cxxabiv1::__base_class_type_info::__offset_flags	/usr/include/c++/4.4.1/cxxabi.h	/^    long 			__offset_flags;  \/\/ Offset and info.$/;"	m	class:__cxxabiv1::__base_class_type_info	access:public
__cxxabiv1::__base_class_type_info::__offset_flags_masks	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __offset_flags_masks $/;"	g	class:__cxxabiv1::__base_class_type_info	access:public
__cxxabiv1::__base_class_type_info::__offset_shift	/usr/include/c++/4.4.1/cxxabi.h	/^	__offset_shift = 8          \/\/ Bits to shift offset.$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__cxxabiv1::__base_class_type_info::__public_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__public_mask = 0x2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__cxxabiv1::__base_class_type_info::__virtual_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__virtual_mask = 0x1,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__cxxabiv1::__class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __class_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__cxxabiv1::__class_type_info::__class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __class_type_info (const char *__n) : type_info(__n) { }$/;"	f	class:__cxxabiv1::__class_type_info	access:public	signature:(const char *__n)
__cxxabiv1::__class_type_info::__contained_ambig	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_ambig, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__contained_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_mask = 1 << __base_class_type_info::__hwm_bit,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__contained_private	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_private = __contained_mask,$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__contained_public	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_public = __contained_mask | __contained_public_mask$/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__contained_public_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_public_mask = __base_class_type_info::__public_mask,   $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__contained_virtual_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__contained_virtual_mask = __base_class_type_info::__virtual_mask, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__do_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_catch(const type_info* __thr_type, void** __thr_obj, $/;"	p	class:__cxxabiv1::__class_type_info	access:protected	signature:(const type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__cxxabiv1::__class_type_info::__do_dyncast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_dyncast(ptrdiff_t __src2dst, __sub_kind __access_path,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(ptrdiff_t __src2dst, __sub_kind __access_path, const __class_type_info* __dst_type, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr, __dyncast_result& __result) const
__cxxabiv1::__class_type_info::__do_find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr) const
__cxxabiv1::__class_type_info::__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info* __dst, const void* __obj,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(const __class_type_info* __dst, const void* __obj, __upcast_result& __restrict __result) const
__cxxabiv1::__class_type_info::__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info* __dst_type, void**__obj_ptr) const;$/;"	p	class:__cxxabiv1::__class_type_info	access:protected	signature:(const __class_type_info* __dst_type, void**__obj_ptr) const
__cxxabiv1::__class_type_info::__find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr) const
__cxxabiv1::__class_type_info::__not_contained	/usr/include/c++/4.4.1/cxxabi.h	/^	__not_contained, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::__sub_kind	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __sub_kind$/;"	g	class:__cxxabiv1::__class_type_info	access:public
__cxxabiv1::__class_type_info::__unknown	/usr/include/c++/4.4.1/cxxabi.h	/^	__unknown = 0, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__cxxabiv1::__class_type_info::~__class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__class_type_info ();$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:()
__cxxabiv1::__cxa_bad_cast	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_bad_cast();$/;"	p	signature:()
__cxxabiv1::__cxa_bad_typeid	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_bad_typeid();$/;"	p	signature:()
__cxxabiv1::__cxa_cdtor_type	/usr/include/c++/4.4.1/cxxabi.h	/^  typedef __cxa_cdtor_return_type (*__cxa_cdtor_type)(void *);$/;"	t
__cxxabiv1::__cxa_demangle	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_demangle(const char* __mangled_name, char* __output_buffer,$/;"	p	signature:(const char* __mangled_name, char* __output_buffer, size_t* __length, int* __status)
__cxxabiv1::__cxa_finalize	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_finalize(void*);$/;"	p	signature:(void*)
__cxxabiv1::__cxa_guard_abort	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_guard_abort(__guard*);$/;"	p	signature:(__guard*)
__cxxabiv1::__cxa_guard_acquire	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_guard_acquire(__guard*);$/;"	p	signature:(__guard*)
__cxxabiv1::__cxa_guard_release	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_guard_release(__guard*);$/;"	p	signature:(__guard*)
__cxxabiv1::__cxa_pure_virtual	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_pure_virtual(void);$/;"	p	signature:(void)
__cxxabiv1::__cxa_vec_cctor	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_cctor(void* dest_array, void* src_array, size_t element_count, $/;"	p	signature:(void* dest_array, void* src_array, size_t element_count, size_t element_size, __cxa_cdtor_return_type (*constructor) (void*, void*), __cxa_cdtor_type destructor)
__cxxabiv1::__cxa_vec_cleanup	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_cleanup(void* __array_address, size_t __element_count,$/;"	p	signature:(void* __array_address, size_t __element_count, size_t __element_size, __cxa_cdtor_type destructor)
__cxxabiv1::__cxa_vec_ctor	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_ctor(void* __array_address, size_t __element_count,$/;"	p	signature:(void* __array_address, size_t __element_count, size_t __element_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor)
__cxxabiv1::__cxa_vec_delete	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_delete(void* __array_address, size_t __element_size,$/;"	p	signature:(void* __array_address, size_t __element_size, size_t __padding_size, __cxa_cdtor_type destructor)
__cxxabiv1::__cxa_vec_delete2	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_delete2(void* __array_address, size_t __element_size,$/;"	p	signature:(void* __array_address, size_t __element_size, size_t __padding_size, __cxa_cdtor_type destructor, void (*__dealloc) (void*))
__cxxabiv1::__cxa_vec_delete3	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_delete3(void* __array_address, size_t __element_size,$/;"	p	signature:(void* __array_address, size_t __element_size, size_t __padding_size, __cxa_cdtor_type destructor, void (*__dealloc) (void*, size_t))
__cxxabiv1::__cxa_vec_dtor	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_dtor(void* __array_address, size_t __element_count,$/;"	p	signature:(void* __array_address, size_t __element_count, size_t __element_size, __cxa_cdtor_type destructor)
__cxxabiv1::__cxa_vec_new	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_new(size_t __element_count, size_t __element_size, $/;"	p	signature:(size_t __element_count, size_t __element_size, size_t __padding_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor)
__cxxabiv1::__cxa_vec_new2	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_new2(size_t __element_count, size_t __element_size,$/;"	p	signature:(size_t __element_count, size_t __element_size, size_t __padding_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor, void *(*__alloc) (size_t), void (*__dealloc) (void*))
__cxxabiv1::__cxa_vec_new3	/usr/include/c++/4.4.1/cxxabi.h	/^  __cxa_vec_new3(size_t __element_count, size_t __element_size,$/;"	p	signature:(size_t __element_count, size_t __element_size, size_t __padding_size, __cxa_cdtor_type constructor, __cxa_cdtor_type destructor, void *(*__alloc) (size_t), void (*__dealloc) (void*, size_t))
__cxxabiv1::__dynamic_cast	/usr/include/c++/4.4.1/cxxabi.h	/^  __dynamic_cast(const void* __src_ptr, \/\/ Starting object.$/;"	p	namespace:__cxxabiv1	signature:(const void* __src_ptr, const __class_type_info* __src_type, const __class_type_info* __dst_type, ptrdiff_t __src2dst)
__cxxabiv1::__enum_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __enum_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__cxxabiv1::__enum_type_info::__enum_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __enum_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__enum_type_info	access:public	signature:(const char* __n)
__cxxabiv1::__enum_type_info::~__enum_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__enum_type_info();$/;"	p	class:__cxxabiv1::__enum_type_info	access:public	signature:()
__cxxabiv1::__forced_unwind	/usr/include/c++/4.4.1/cxxabi-forced.h	/^  class __forced_unwind$/;"	c	namespace:__cxxabiv1
__cxxabiv1::__forced_unwind::__pure_dummy	/usr/include/c++/4.4.1/cxxabi-forced.h	/^    virtual void __pure_dummy() = 0; \/\/ prevent catch by value$/;"	p	class:__cxxabiv1::__forced_unwind	access:private	signature:()
__cxxabiv1::__forced_unwind::~__forced_unwind	/usr/include/c++/4.4.1/cxxabi-forced.h	/^    virtual ~__forced_unwind() throw();$/;"	p	class:__cxxabiv1::__forced_unwind	access:private	signature:()
__cxxabiv1::__foreign_exception	/usr/include/c++/4.4.1/cxxabi.h	/^  class __foreign_exception$/;"	c	namespace:__cxxabiv1
__cxxabiv1::__foreign_exception::__pure_dummy	/usr/include/c++/4.4.1/cxxabi.h	/^    virtual void __pure_dummy() = 0; \/\/ prevent catch by value$/;"	p	class:__cxxabiv1::__foreign_exception	access:private	signature:()
__cxxabiv1::__foreign_exception::~__foreign_exception	/usr/include/c++/4.4.1/cxxabi.h	/^    virtual ~__foreign_exception() throw();$/;"	p	class:__cxxabiv1::__foreign_exception	access:private	signature:()
__cxxabiv1::__function_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __function_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__cxxabiv1::__function_type_info::__function_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __function_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__function_type_info	access:public	signature:(const char* __n)
__cxxabiv1::__function_type_info::__is_function_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_function_p() const;$/;"	p	class:__cxxabiv1::__function_type_info	access:protected	signature:() const
__cxxabiv1::__function_type_info::~__function_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__function_type_info();$/;"	p	class:__cxxabiv1::__function_type_info	access:public	signature:()
__cxxabiv1::__fundamental_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __fundamental_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__cxxabiv1::__fundamental_type_info::__fundamental_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __fundamental_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__fundamental_type_info	access:public	signature:(const char* __n)
__cxxabiv1::__fundamental_type_info::~__fundamental_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__fundamental_type_info();$/;"	p	class:__cxxabiv1::__fundamental_type_info	access:public	signature:()
__cxxabiv1::__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __pbase_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__cxxabiv1::__pbase_type_info::__const_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__const_mask = 0x1,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__cxxabiv1::__pbase_type_info::__do_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_catch(const std::type_info* __thr_type, void** __thr_obj, $/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const std::type_info* __thr_type, void** __thr_obj, unsigned int __outer) const
__cxxabiv1::__pbase_type_info::__flags	/usr/include/c++/4.4.1/cxxabi.h	/^    unsigned int 		__flags; \/\/ Qualification of the target object.$/;"	m	class:__cxxabiv1::__pbase_type_info	access:public
__cxxabiv1::__pbase_type_info::__incomplete_class_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__incomplete_class_mask = 0x10$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__cxxabiv1::__pbase_type_info::__incomplete_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__incomplete_mask = 0x8,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__cxxabiv1::__pbase_type_info::__masks	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __masks $/;"	g	class:__cxxabiv1::__pbase_type_info	access:public
__cxxabiv1::__pbase_type_info::__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pbase_type_info(const __pbase_type_info&);$/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const __pbase_type_info&)
__cxxabiv1::__pbase_type_info::__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pbase_type_info(const char* __n, int __quals, $/;"	f	class:__cxxabiv1::__pbase_type_info	access:public	signature:(const char* __n, int __quals, const std::type_info* __type)
__cxxabiv1::__pbase_type_info::__pointee	/usr/include/c++/4.4.1/cxxabi.h	/^    const std::type_info* 	__pointee; \/\/ Type of pointed to object.$/;"	m	class:__cxxabiv1::__pbase_type_info	access:public
__cxxabiv1::__pbase_type_info::__pointer_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj,$/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const __pbase_type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__cxxabiv1::__pbase_type_info::__restrict_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__restrict_mask = 0x4,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__cxxabiv1::__pbase_type_info::__volatile_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__volatile_mask = 0x2,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__cxxabiv1::__pbase_type_info::operator =	/usr/include/c++/4.4.1/cxxabi.h	/^    operator=(const __pbase_type_info&);$/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const __pbase_type_info&)
__cxxabiv1::__pbase_type_info::~__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__pbase_type_info();$/;"	p	class:__cxxabiv1::__pbase_type_info	access:public	signature:()
__cxxabiv1::__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __pointer_to_member_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1	inherits:__pbase_type_info
__cxxabiv1::__pointer_to_member_type_info::__context	/usr/include/c++/4.4.1/cxxabi.h	/^    __class_type_info* __context;   \/\/ Class of the member.$/;"	m	class:__cxxabiv1::__pointer_to_member_type_info	access:public
__cxxabiv1::__pointer_to_member_type_info::__pointer_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj,$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:protected	signature:(const __pbase_type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__cxxabiv1::__pointer_to_member_type_info::__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_to_member_type_info(const __pointer_to_member_type_info&);$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:protected	signature:(const __pointer_to_member_type_info&)
__cxxabiv1::__pointer_to_member_type_info::__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_to_member_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pointer_to_member_type_info	access:public	signature:(const char* __n, int __quals, const std::type_info* __type, __class_type_info* __klass)
__cxxabiv1::__pointer_to_member_type_info::operator =	/usr/include/c++/4.4.1/cxxabi.h	/^    operator=(const __pointer_to_member_type_info&);$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:protected	signature:(const __pointer_to_member_type_info&)
__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__pointer_to_member_type_info();$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:public	signature:()
__cxxabiv1::__pointer_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __pointer_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1	inherits:__pbase_type_info
__cxxabiv1::__pointer_type_info::__is_pointer_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_pointer_p() const;$/;"	p	class:__cxxabiv1::__pointer_type_info	access:protected	signature:() const
__cxxabiv1::__pointer_type_info::__pointer_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj, $/;"	p	class:__cxxabiv1::__pointer_type_info	access:protected	signature:(const __pbase_type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__cxxabiv1::__pointer_type_info::__pointer_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_type_info(const char* __n, int __quals, $/;"	f	class:__cxxabiv1::__pointer_type_info	access:public	signature:(const char* __n, int __quals, const std::type_info* __type)
__cxxabiv1::__pointer_type_info::~__pointer_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__pointer_type_info();$/;"	p	class:__cxxabiv1::__pointer_type_info	access:public	signature:()
__cxxabiv1::__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __si_class_type_info : public __class_type_info$/;"	c	namespace:__cxxabiv1	inherits:__class_type_info
__cxxabiv1::__si_class_type_info::__base_type	/usr/include/c++/4.4.1/cxxabi.h	/^    const __class_type_info* __base_type;$/;"	m	class:__cxxabiv1::__si_class_type_info	access:public
__cxxabiv1::__si_class_type_info::__do_dyncast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_dyncast(ptrdiff_t __src2dst, __sub_kind __access_path,$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, __sub_kind __access_path, const __class_type_info* __dst_type, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr, __dyncast_result& __result) const
__cxxabiv1::__si_class_type_info::__do_find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr,$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __sub_ptr) const
__cxxabiv1::__si_class_type_info::__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info*__dst, const void*__obj,$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(const __class_type_info*__dst, const void*__obj, __upcast_result& __restrict __result) const
__cxxabiv1::__si_class_type_info::__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __si_class_type_info(const __si_class_type_info&);$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(const __si_class_type_info&)
__cxxabiv1::__si_class_type_info::__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __si_class_type_info(const char *__n, const __class_type_info *__base)$/;"	f	class:__cxxabiv1::__si_class_type_info	access:public	signature:(const char *__n, const __class_type_info *__base)
__cxxabiv1::__si_class_type_info::operator =	/usr/include/c++/4.4.1/cxxabi.h	/^    operator=(const __si_class_type_info&);$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(const __si_class_type_info&)
__cxxabiv1::__si_class_type_info::~__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__si_class_type_info();$/;"	p	class:__cxxabiv1::__si_class_type_info	access:public	signature:()
__cxxabiv1::__vmi_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __vmi_class_type_info : public __class_type_info $/;"	c	namespace:__cxxabiv1	inherits:__class_type_info
__cxxabiv1::__vmi_class_type_info::__base_count	/usr/include/c++/4.4.1/cxxabi.h	/^    unsigned int 		__base_count;  \/\/ Number of direct bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	access:public
__cxxabiv1::__vmi_class_type_info::__base_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __base_class_type_info 	__base_info[1];  \/\/ Array of bases.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	access:public
__cxxabiv1::__vmi_class_type_info::__diamond_shaped_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__diamond_shaped_mask = 0x2, \/\/ Diamond shaped multiple inheritance.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__cxxabiv1::__vmi_class_type_info::__do_dyncast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_dyncast(ptrdiff_t __src2dst, __sub_kind __access_path,$/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, __sub_kind __access_path, const __class_type_info* __dst_type, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr, __dyncast_result& __result) const
__cxxabiv1::__vmi_class_type_info::__do_find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr, $/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr) const
__cxxabiv1::__vmi_class_type_info::__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info* __dst, const void* __obj,$/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:protected	signature:(const __class_type_info* __dst, const void* __obj, __upcast_result& __restrict __result) const
__cxxabiv1::__vmi_class_type_info::__flags	/usr/include/c++/4.4.1/cxxabi.h	/^    unsigned int 		__flags;  \/\/ Details about the class hierarchy.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	access:public
__cxxabiv1::__vmi_class_type_info::__flags_masks	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __flags_masks $/;"	g	class:__cxxabiv1::__vmi_class_type_info	access:public
__cxxabiv1::__vmi_class_type_info::__flags_unknown_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__flags_unknown_mask = 0x10$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__cxxabiv1::__vmi_class_type_info::__non_diamond_repeat_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__non_diamond_repeat_mask = 0x1, \/\/ Distinct instance of repeated base.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__cxxabiv1::__vmi_class_type_info::__vmi_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __vmi_class_type_info(const char* __n, int ___flags)$/;"	f	class:__cxxabiv1::__vmi_class_type_info	access:public	signature:(const char* __n, int ___flags)
__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__vmi_class_type_info();$/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:public	signature:()
__diamond_shaped_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__diamond_shaped_mask = 0x2, \/\/ Diamond shaped multiple inheritance.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__do_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_catch(const std::type_info* __thr_type, void** __thr_obj, $/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const std::type_info* __thr_type, void** __thr_obj, unsigned int __outer) const
__do_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_catch(const type_info* __thr_type, void** __thr_obj, $/;"	p	class:__cxxabiv1::__class_type_info	access:protected	signature:(const type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__do_dyncast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_dyncast(ptrdiff_t __src2dst, __sub_kind __access_path,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(ptrdiff_t __src2dst, __sub_kind __access_path, const __class_type_info* __dst_type, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr, __dyncast_result& __result) const
__do_dyncast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_dyncast(ptrdiff_t __src2dst, __sub_kind __access_path,$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, __sub_kind __access_path, const __class_type_info* __dst_type, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr, __dyncast_result& __result) const
__do_dyncast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_dyncast(ptrdiff_t __src2dst, __sub_kind __access_path,$/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, __sub_kind __access_path, const __class_type_info* __dst_type, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr, __dyncast_result& __result) const
__do_find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr, $/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr) const
__do_find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr) const
__do_find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr,$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __sub_ptr) const
__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info* __dst, const void* __obj,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(const __class_type_info* __dst, const void* __obj, __upcast_result& __restrict __result) const
__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info* __dst, const void* __obj,$/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:protected	signature:(const __class_type_info* __dst, const void* __obj, __upcast_result& __restrict __result) const
__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info* __dst_type, void**__obj_ptr) const;$/;"	p	class:__cxxabiv1::__class_type_info	access:protected	signature:(const __class_type_info* __dst_type, void**__obj_ptr) const
__do_upcast	/usr/include/c++/4.4.1/cxxabi.h	/^    __do_upcast(const __class_type_info*__dst, const void*__obj,$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(const __class_type_info*__dst, const void*__obj, __upcast_result& __restrict __result) const
__dynamic_cast	/usr/include/c++/4.4.1/cxxabi.h	/^  __dynamic_cast(const void* __src_ptr, \/\/ Starting object.$/;"	p	namespace:__cxxabiv1	signature:(const void* __src_ptr, const __class_type_info* __src_type, const __class_type_info* __dst_type, ptrdiff_t __src2dst)
__enum_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __enum_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__enum_type_info	access:public	signature:(const char* __n)
__enum_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __enum_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^  namespace __exception_ptr$/;"	n	namespace:std
__find_public_src	/usr/include/c++/4.4.1/cxxabi.h	/^    __find_public_src(ptrdiff_t __src2dst, const void* __obj_ptr,$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:(ptrdiff_t __src2dst, const void* __obj_ptr, const __class_type_info* __src_type, const void* __src_ptr) const
__flags	/usr/include/c++/4.4.1/cxxabi.h	/^    unsigned int 		__flags;  \/\/ Details about the class hierarchy.$/;"	m	class:__cxxabiv1::__vmi_class_type_info	access:public
__flags	/usr/include/c++/4.4.1/cxxabi.h	/^    unsigned int 		__flags; \/\/ Qualification of the target object.$/;"	m	class:__cxxabiv1::__pbase_type_info	access:public
__flags_masks	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __flags_masks $/;"	g	class:__cxxabiv1::__vmi_class_type_info	access:public
__flags_unknown_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__flags_unknown_mask = 0x10$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__forced_unwind	/usr/include/c++/4.4.1/cxxabi-forced.h	/^  class __forced_unwind$/;"	c	namespace:__cxxabiv1
__foreign_exception	/usr/include/c++/4.4.1/cxxabi.h	/^  class __foreign_exception$/;"	c	namespace:__cxxabiv1
__function_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __function_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__function_type_info	access:public	signature:(const char* __n)
__function_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __function_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__fundamental_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __fundamental_type_info(const char* __n) : std::type_info(__n) { }$/;"	f	class:__cxxabiv1::__fundamental_type_info	access:public	signature:(const char* __n)
__fundamental_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __fundamental_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__hwm_bit	/usr/include/c++/4.4.1/cxxabi.h	/^	__hwm_bit = 2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__incomplete_class_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__incomplete_class_mask = 0x10$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__incomplete_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__incomplete_mask = 0x8,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__is_function_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_function_p() const;$/;"	p	class:__cxxabiv1::__function_type_info	access:protected	signature:() const
__is_pointer_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_pointer_p() const;$/;"	p	class:__cxxabiv1::__pointer_type_info	access:protected	signature:() const
__is_public_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_public_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info	access:public	signature:() const
__is_virtual_p	/usr/include/c++/4.4.1/cxxabi.h	/^    __is_virtual_p() const$/;"	f	class:__cxxabiv1::__base_class_type_info	access:public	signature:() const
__masks	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __masks $/;"	g	class:__cxxabiv1::__pbase_type_info	access:public
__non_diamond_repeat_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__non_diamond_repeat_mask = 0x1, \/\/ Distinct instance of repeated base.$/;"	e	enum:__cxxabiv1::__vmi_class_type_info::__flags_masks
__not_contained	/usr/include/c++/4.4.1/cxxabi.h	/^	__not_contained, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__offset	/usr/include/c++/4.4.1/cxxabi.h	/^    __offset() const$/;"	f	class:__cxxabiv1::__base_class_type_info	access:public	signature:() const
__offset_flags	/usr/include/c++/4.4.1/cxxabi.h	/^    long 			__offset_flags;  \/\/ Offset and info.$/;"	m	class:__cxxabiv1::__base_class_type_info	access:public
__offset_flags_masks	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __offset_flags_masks $/;"	g	class:__cxxabiv1::__base_class_type_info	access:public
__offset_shift	/usr/include/c++/4.4.1/cxxabi.h	/^	__offset_shift = 8          \/\/ Bits to shift offset.$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pbase_type_info(const __pbase_type_info&);$/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const __pbase_type_info&)
__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pbase_type_info(const char* __n, int __quals, $/;"	f	class:__cxxabiv1::__pbase_type_info	access:public	signature:(const char* __n, int __quals, const std::type_info* __type)
__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __pbase_type_info : public std::type_info$/;"	c	namespace:__cxxabiv1	inherits:std::type_info
__pointee	/usr/include/c++/4.4.1/cxxabi.h	/^    const std::type_info* 	__pointee; \/\/ Type of pointed to object.$/;"	m	class:__cxxabiv1::__pbase_type_info	access:public
__pointer_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj, $/;"	p	class:__cxxabiv1::__pointer_type_info	access:protected	signature:(const __pbase_type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__pointer_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj,$/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const __pbase_type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__pointer_catch	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_catch(const __pbase_type_info* __thr_type, void** __thr_obj,$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:protected	signature:(const __pbase_type_info* __thr_type, void** __thr_obj, unsigned __outer) const
__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_to_member_type_info(const __pointer_to_member_type_info&);$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:protected	signature:(const __pointer_to_member_type_info&)
__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_to_member_type_info(const char* __n, int __quals,$/;"	f	class:__cxxabiv1::__pointer_to_member_type_info	access:public	signature:(const char* __n, int __quals, const std::type_info* __type, __class_type_info* __klass)
__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __pointer_to_member_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1	inherits:__pbase_type_info
__pointer_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __pointer_type_info(const char* __n, int __quals, $/;"	f	class:__cxxabiv1::__pointer_type_info	access:public	signature:(const char* __n, int __quals, const std::type_info* __type)
__pointer_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __pointer_type_info : public __pbase_type_info$/;"	c	namespace:__cxxabiv1	inherits:__pbase_type_info
__public_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__public_mask = 0x2,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__pure_dummy	/usr/include/c++/4.4.1/cxxabi-forced.h	/^    virtual void __pure_dummy() = 0; \/\/ prevent catch by value$/;"	p	class:__cxxabiv1::__forced_unwind	access:private	signature:()
__pure_dummy	/usr/include/c++/4.4.1/cxxabi.h	/^    virtual void __pure_dummy() = 0; \/\/ prevent catch by value$/;"	p	class:__cxxabiv1::__foreign_exception	access:private	signature:()
__restrict_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__restrict_mask = 0x4,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
__safe_bool	/usr/include/c++/4.4.1/exception_ptr.h	/^      typedef void (exception_ptr::*__safe_bool)();$/;"	t	class:std::__exception_ptr::exception_ptr	access:public
__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __si_class_type_info(const __si_class_type_info&);$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(const __si_class_type_info&)
__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __si_class_type_info(const char *__n, const __class_type_info *__base)$/;"	f	class:__cxxabiv1::__si_class_type_info	access:public	signature:(const char *__n, const __class_type_info *__base)
__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __si_class_type_info : public __class_type_info$/;"	c	namespace:__cxxabiv1	inherits:__class_type_info
__sub_kind	/usr/include/c++/4.4.1/cxxabi.h	/^    enum __sub_kind$/;"	g	class:__cxxabiv1::__class_type_info	access:public
__throw_exception_again	/usr/include/c++/4.4.1/exception_defines.h	41;"	d
__throw_exception_again	/usr/include/c++/4.4.1/exception_defines.h	46;"	d
__try	/usr/include/c++/4.4.1/exception_defines.h	39;"	d
__try	/usr/include/c++/4.4.1/exception_defines.h	44;"	d
__unknown	/usr/include/c++/4.4.1/cxxabi.h	/^	__unknown = 0, $/;"	e	enum:__cxxabiv1::__class_type_info::__sub_kind
__virtual_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__virtual_mask = 0x1,$/;"	e	enum:__cxxabiv1::__base_class_type_info::__offset_flags_masks
__vmi_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    __vmi_class_type_info(const char* __n, int ___flags)$/;"	f	class:__cxxabiv1::__vmi_class_type_info	access:public	signature:(const char* __n, int ___flags)
__vmi_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^  class __vmi_class_type_info : public __class_type_info $/;"	c	namespace:__cxxabiv1	inherits:__class_type_info
__volatile_mask	/usr/include/c++/4.4.1/cxxabi.h	/^	__volatile_mask = 0x2,$/;"	e	enum:__cxxabiv1::__pbase_type_info::__masks
atomic_flag_clear	/usr/include/c++/4.4.1/stdatomic.h	/^  atomic_flag_clear(volatile __atomic_flag_base* __a)$/;"	f	signature:(volatile __atomic_flag_base* __a)
atomic_flag_clear_explicit	/usr/include/c++/4.4.1/stdatomic.h	/^  atomic_flag_clear_explicit(volatile __atomic_flag_base*, memory_order);$/;"	p	signature:(volatile __atomic_flag_base*, memory_order)
atomic_flag_test_and_set	/usr/include/c++/4.4.1/stdatomic.h	/^  atomic_flag_test_and_set(volatile __atomic_flag_base* __a)$/;"	f	signature:(volatile __atomic_flag_base* __a)
atomic_flag_test_and_set_explicit	/usr/include/c++/4.4.1/stdatomic.h	/^  atomic_flag_test_and_set_explicit(volatile __atomic_flag_base*, memory_order);$/;"	p	signature:(volatile __atomic_flag_base*, memory_order)
atomic_int_fast16_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_short 		atomic_int_fast16_t;$/;"	t
atomic_int_fast32_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_int 		atomic_int_fast32_t;$/;"	t
atomic_int_fast64_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_llong 		atomic_int_fast64_t;$/;"	t
atomic_int_fast8_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_schar 		atomic_int_fast8_t;$/;"	t
atomic_int_least16_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_short 		atomic_int_least16_t;$/;"	t
atomic_int_least32_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_int 		atomic_int_least32_t;$/;"	t
atomic_int_least64_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_llong 		atomic_int_least64_t;$/;"	t
atomic_int_least8_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_schar 		atomic_int_least8_t;$/;"	t
atomic_intmax_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_llong 		atomic_intmax_t;$/;"	t
atomic_intptr_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_long 		atomic_intptr_t;$/;"	t
atomic_ptrdiff_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_long 		atomic_ptrdiff_t;$/;"	t
atomic_size_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ulong 		atomic_size_t;$/;"	t
atomic_ssize_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_long 		atomic_ssize_t;$/;"	t
atomic_uint_fast16_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ushort 	atomic_uint_fast16_t;$/;"	t
atomic_uint_fast32_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_uint 		atomic_uint_fast32_t;$/;"	t
atomic_uint_fast64_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ullong 	atomic_uint_fast64_t;$/;"	t
atomic_uint_fast8_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_uchar 		atomic_uint_fast8_t;$/;"	t
atomic_uint_least16_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ushort 	atomic_uint_least16_t;$/;"	t
atomic_uint_least32_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_uint 		atomic_uint_least32_t;$/;"	t
atomic_uint_least64_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ullong 	atomic_uint_least64_t;$/;"	t
atomic_uint_least8_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_uchar 		atomic_uint_least8_t;$/;"	t
atomic_uintmax_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ullong 	atomic_uintmax_t;$/;"	t
atomic_uintptr_t	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef atomic_ulong 		atomic_uintptr_t;$/;"	t
copy_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^    copy_exception(_Ex __ex) throw()$/;"	f	namespace:std	signature:(_Ex __ex)
copy_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^    copy_exception(_Ex __ex) throw();$/;"	p	namespace:std	signature:(_Ex __ex)
current_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^      friend exception_ptr std::current_exception() throw();$/;"	p	class:std::__exception_ptr::exception_ptr::std	access:friend	signature:()
exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:()
exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr(__safe_bool) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(__safe_bool)
exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr(const exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(const exception_ptr&)
exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr(exception_ptr&& __o) throw()$/;"	f	class:std::__exception_ptr::exception_ptr	access:public	signature:(exception_ptr&& __o)
exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      explicit exception_ptr(void* __e) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:(void* __e)
exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^    class exception_ptr$/;"	c	namespace:std::__exception_ptr
memory_order	/usr/include/c++/4.4.1/stdatomic.h	/^    } memory_order;$/;"	t	typeref:enum:memory_order
memory_order	/usr/include/c++/4.4.1/stdatomic.h	/^  typedef enum memory_order $/;"	g
memory_order_acq_rel	/usr/include/c++/4.4.1/stdatomic.h	/^      memory_order_acq_rel, $/;"	e	enum:memory_order
memory_order_acquire	/usr/include/c++/4.4.1/stdatomic.h	/^      memory_order_acquire, $/;"	e	enum:memory_order
memory_order_consume	/usr/include/c++/4.4.1/stdatomic.h	/^      memory_order_consume, $/;"	e	enum:memory_order
memory_order_relaxed	/usr/include/c++/4.4.1/stdatomic.h	/^      memory_order_relaxed, $/;"	e	enum:memory_order
memory_order_release	/usr/include/c++/4.4.1/stdatomic.h	/^      memory_order_release,$/;"	e	enum:memory_order
memory_order_seq_cst	/usr/include/c++/4.4.1/stdatomic.h	/^      memory_order_seq_cst$/;"	e	enum:memory_order
operator !	/usr/include/c++/4.4.1/exception_ptr.h	/^      bool operator!() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:() const
operator !=	/usr/include/c++/4.4.1/exception_ptr.h	/^    operator!=(const exception_ptr&, const exception_ptr&) throw();$/;"	p	namespace:std::__exception_ptr	signature:(const exception_ptr&, const exception_ptr&)
operator =	/usr/include/c++/4.4.1/cxxabi.h	/^    operator=(const __pbase_type_info&);$/;"	p	class:__cxxabiv1::__pbase_type_info	access:protected	signature:(const __pbase_type_info&)
operator =	/usr/include/c++/4.4.1/cxxabi.h	/^    operator=(const __pointer_to_member_type_info&);$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:protected	signature:(const __pointer_to_member_type_info&)
operator =	/usr/include/c++/4.4.1/cxxabi.h	/^    operator=(const __si_class_type_info&);$/;"	p	class:__cxxabiv1::__si_class_type_info	access:protected	signature:(const __si_class_type_info&)
operator =	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator=(const exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(const exception_ptr&)
operator =	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator=(exception_ptr&& __o) throw()$/;"	f	class:std::__exception_ptr::exception_ptr	access:public	signature:(exception_ptr&& __o)
operator ==	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator==(const exception_ptr&, const exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:friend	signature:(const exception_ptr&, const exception_ptr&)
operator ==	/usr/include/c++/4.4.1/exception_ptr.h	/^    operator==(const exception_ptr&, const exception_ptr&) throw();$/;"	p	namespace:std::__exception_ptr	signature:(const exception_ptr&, const exception_ptr&)
operator __safe_bool	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator __safe_bool() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:() const
rethrow_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^      friend void std::rethrow_exception(exception_ptr);$/;"	p	class:std::__exception_ptr::exception_ptr::std	access:friend	signature:(exception_ptr)
rethrow_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^  void rethrow_exception(exception_ptr) __attribute__ ((__noreturn__));$/;"	p	namespace:std	signature:(exception_ptr)
std	/usr/include/c++/4.4.1/exception_ptr.h	/^namespace std $/;"	n
std::__exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^  namespace __exception_ptr$/;"	n	namespace:std
std::__exception_ptr::exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^    class exception_ptr$/;"	c	namespace:std::__exception_ptr
std::__exception_ptr::exception_ptr::_M_addref	/usr/include/c++/4.4.1/exception_ptr.h	/^      void _M_addref() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:()
std::__exception_ptr::exception_ptr::_M_exception_object	/usr/include/c++/4.4.1/exception_ptr.h	/^      void* _M_exception_object;$/;"	m	class:std::__exception_ptr::exception_ptr	access:private
std::__exception_ptr::exception_ptr::_M_get	/usr/include/c++/4.4.1/exception_ptr.h	/^      void *_M_get() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:() const
std::__exception_ptr::exception_ptr::_M_release	/usr/include/c++/4.4.1/exception_ptr.h	/^      void _M_release() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:()
std::__exception_ptr::exception_ptr::_M_safe_bool_dummy	/usr/include/c++/4.4.1/exception_ptr.h	/^      void _M_safe_bool_dummy();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:()
std::__exception_ptr::exception_ptr::__cxa_exception_type	/usr/include/c++/4.4.1/exception_ptr.h	/^      __cxa_exception_type() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:() const
std::__exception_ptr::exception_ptr::__safe_bool	/usr/include/c++/4.4.1/exception_ptr.h	/^      typedef void (exception_ptr::*__safe_bool)();$/;"	t	class:std::__exception_ptr::exception_ptr	access:public
std::__exception_ptr::exception_ptr::exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:()
std::__exception_ptr::exception_ptr::exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr(__safe_bool) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(__safe_bool)
std::__exception_ptr::exception_ptr::exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr(const exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(const exception_ptr&)
std::__exception_ptr::exception_ptr::exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      exception_ptr(exception_ptr&& __o) throw()$/;"	f	class:std::__exception_ptr::exception_ptr	access:public	signature:(exception_ptr&& __o)
std::__exception_ptr::exception_ptr::exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      explicit exception_ptr(void* __e) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:private	signature:(void* __e)
std::__exception_ptr::exception_ptr::operator !	/usr/include/c++/4.4.1/exception_ptr.h	/^      bool operator!() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:() const
std::__exception_ptr::exception_ptr::operator =	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator=(const exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(const exception_ptr&)
std::__exception_ptr::exception_ptr::operator =	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator=(exception_ptr&& __o) throw()$/;"	f	class:std::__exception_ptr::exception_ptr	access:public	signature:(exception_ptr&& __o)
std::__exception_ptr::exception_ptr::operator ==	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator==(const exception_ptr&, const exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:friend	signature:(const exception_ptr&, const exception_ptr&)
std::__exception_ptr::exception_ptr::operator __safe_bool	/usr/include/c++/4.4.1/exception_ptr.h	/^      operator __safe_bool() const throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:() const
std::__exception_ptr::exception_ptr::std::current_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^      friend exception_ptr std::current_exception() throw();$/;"	p	class:std::__exception_ptr::exception_ptr::std	access:friend	signature:()
std::__exception_ptr::exception_ptr::std::rethrow_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^      friend void std::rethrow_exception(exception_ptr);$/;"	p	class:std::__exception_ptr::exception_ptr::std	access:friend	signature:(exception_ptr)
std::__exception_ptr::exception_ptr::swap	/usr/include/c++/4.4.1/exception_ptr.h	/^      swap(exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(exception_ptr&)
std::__exception_ptr::exception_ptr::~exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      ~exception_ptr() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:()
std::__exception_ptr::operator !=	/usr/include/c++/4.4.1/exception_ptr.h	/^    operator!=(const exception_ptr&, const exception_ptr&) throw();$/;"	p	namespace:std::__exception_ptr	signature:(const exception_ptr&, const exception_ptr&)
std::__exception_ptr::operator ==	/usr/include/c++/4.4.1/exception_ptr.h	/^    operator==(const exception_ptr&, const exception_ptr&) throw();$/;"	p	namespace:std::__exception_ptr	signature:(const exception_ptr&, const exception_ptr&)
std::copy_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^    copy_exception(_Ex __ex) throw()$/;"	f	namespace:std	signature:(_Ex __ex)
std::copy_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^    copy_exception(_Ex __ex) throw();$/;"	p	namespace:std	signature:(_Ex __ex)
std::rethrow_exception	/usr/include/c++/4.4.1/exception_ptr.h	/^  void rethrow_exception(exception_ptr) __attribute__ ((__noreturn__));$/;"	p	namespace:std	signature:(exception_ptr)
swap	/usr/include/c++/4.4.1/exception_ptr.h	/^      swap(exception_ptr&) throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:(exception_ptr&)
~__array_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__array_type_info();$/;"	p	class:__cxxabiv1::__array_type_info	access:public	signature:()
~__class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__class_type_info ();$/;"	p	class:__cxxabiv1::__class_type_info	access:public	signature:()
~__enum_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__enum_type_info();$/;"	p	class:__cxxabiv1::__enum_type_info	access:public	signature:()
~__forced_unwind	/usr/include/c++/4.4.1/cxxabi-forced.h	/^    virtual ~__forced_unwind() throw();$/;"	p	class:__cxxabiv1::__forced_unwind	access:private	signature:()
~__foreign_exception	/usr/include/c++/4.4.1/cxxabi.h	/^    virtual ~__foreign_exception() throw();$/;"	p	class:__cxxabiv1::__foreign_exception	access:private	signature:()
~__function_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__function_type_info();$/;"	p	class:__cxxabiv1::__function_type_info	access:public	signature:()
~__fundamental_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__fundamental_type_info();$/;"	p	class:__cxxabiv1::__fundamental_type_info	access:public	signature:()
~__pbase_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__pbase_type_info();$/;"	p	class:__cxxabiv1::__pbase_type_info	access:public	signature:()
~__pointer_to_member_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__pointer_to_member_type_info();$/;"	p	class:__cxxabiv1::__pointer_to_member_type_info	access:public	signature:()
~__pointer_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__pointer_type_info();$/;"	p	class:__cxxabiv1::__pointer_type_info	access:public	signature:()
~__si_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__si_class_type_info();$/;"	p	class:__cxxabiv1::__si_class_type_info	access:public	signature:()
~__vmi_class_type_info	/usr/include/c++/4.4.1/cxxabi.h	/^    ~__vmi_class_type_info();$/;"	p	class:__cxxabiv1::__vmi_class_type_info	access:public	signature:()
~exception_ptr	/usr/include/c++/4.4.1/exception_ptr.h	/^      ~exception_ptr() throw();$/;"	p	class:std::__exception_ptr::exception_ptr	access:public	signature:()
