snippet php
	<?php
	${1}
	?>
snippet ec
	echo "${1:string}"${2};
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet Get
	$_GET['${1:variable}']${2}
snippet Post
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet pfun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet fun
	function ${1:FunctionName}(${2})
	{
		${3:// code...}
	}

# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet dbcon
	$host = "${1:127.0.0.1}";
	$username = "${2:root}";
	$password = "${3:wangdj}";
	$dbName = "${4:mindnet}";
	$dbId = mysql_connect($host,$username,$password) or die("database connect error".mysql_error());
	mysql_select_db($dbName,$dbId) or die("database visit error".mysql_error())
	mysql_query("set names ${5:utf8}");
	${6}
snippet dbque
	$${1:query} = mysql_query("select * from ${2:table}");
	if($$1){
	    while($${3:row} = mysql_fetch_array($$1)){
		${4}
	    }
	}
snippet rootpath
	define('${1:QISHI_ROOT_PATH}', str_replace('${2:include/common.inc.php}', '', str_replace('\\', '/', __FILE__)));
snippet mkhtml
	//鐢熸垚鏂囦欢
	function make_html($file_name,$content) 
	     {
		 $dir=dirname($file_name);
		 if (!file_exists($dir))
			 make_dir($dir);
		 }
		  if(!$fp = fopen($file_name,"w")) return false;
		  if(!fwrite($fp,$content))
			  { 
		  return false;
		  } 
		 fclose($fp);
		 chmod($file_name,0777);
			 return $file_name;
	      }
	//寤虹珛鐩綍
	function  make_dir($path)
	{ 
		if(!file_exists($path))
		{
		make_dir(dirname($path));
		@mkdir($path,0777);
		@chmod($path,0777);
		}
	}
snippet mkdir
	//寤虹珛鐩綍
	function  make_dir($path)
	{ 
		if(!file_exists($path))
		{
		make_dir(dirname($path));
		@mkdir($path,0777);
		@chmod($path,0777);
		}
	}
snippet insert
	$sql = "INSERT INTO ${1:table}(${2:name,name2})";
	$sql .= " VALUES ('$${3:value}' )";
	if($db->query($sql))
		return true;
	    else return false;
	${7}
#description
snippet update
	$sql = "UPDATE ${1:table} SET ${2:name}='${3:value}' ,${4} WHERE ${5:id}='$${6:id}' ";
	if($db->query($sql))
		return true;
	    else return false;
	${7}
snippet delete
	$sql = "DELETE FROM ${1:table} WHERE ${2:id}='$${3:id}' ";
	if($db->query($sql))
		return true;
	    else return false;
	${7}
snippet select
	$sql = "SELECT * FROM ${1:table}";
	$rst = $db->${2:query}($sql);
	${3:}
snippet get
	$${1:name} = $_GET['$1'];
	${2}
#description
snippet post
	$${1:name} = $_POST['$1'];
	${2}
#description
snippet rst
	$${1:name} = $rst['$1'];
	${2}
snippet sma
	$smarty->assign('${1:name}',$rst['$1']);
	${2}
#description
snippet ass
	$smarty->assign('${1:name}',$$1);
snippet table
	$sql = "select * from ${1:table}";
	$rst = $db->getall($sql);
	$smarty->assign('${2:name}',$rst);
	${3}
snippet dis
	$smarty->display('${1:name}');
